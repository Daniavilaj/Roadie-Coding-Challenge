{"ast":null,"code":"var _jsxFileName = \"/Users/danielaavilajaramillo/Desktop/Rodie Coding Challege/Roadie-Coding-Challenge/src/components/reviewForm/ReviewForm.js\";\nimport React from 'react';\nimport './ReviewForm.css';\n\nclass ReviewForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      newReview: {},\n      errors: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  validate(rating, title, name, review) {\n    const errors = [];\n\n    if (rating === null || rating === \"0\") {\n      errors.push(\"Please select a rating\");\n    }\n\n    if (title.length === 0) {\n      errors.push(\"Review should have a title\");\n    }\n\n    if (name.length === 0) {\n      errors.push(\"Name can't be empty\");\n    }\n\n    if (review.length === 0) {\n      errors.push(\"Please write about your experience\");\n    }\n\n    return errors;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const title = this.title.value;\n    const name = this.name.value;\n    var today = new Date();\n    const date = ('0' + (today.getMonth() + 1)).slice(-2) + '/' + ('0' + today.getDate()).slice(-2) + '/' + today.getFullYear().toString().substr(-2);\n    const rating = this.rating.value;\n    const review = this.review.value;\n    const errors = this.validate(rating, title, name, review);\n\n    if (errors.length > 0) {\n      this.setState({\n        errors\n      });\n      return;\n    }\n\n    const newData = {\n      Title: title,\n      User: name,\n      Date: date,\n      Rating: rating,\n      Review: review\n    };\n    this.props.addReview(newData);\n    this.props.close();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(\"select\", {\n      ref: value => this.rating = value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Select\"), React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"One star\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Two star\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Three star\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Four star\"), React.createElement(\"option\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Five star\")), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Your name\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter text here...\",\n      ref: input => this.name = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Review title\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter text here...\",\n      ref: input => this.title = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Write your review below\"), React.createElement(\"textarea\", {\n      className: \"input-review\",\n      placeholder: \"Enter text here...\",\n      ref: input => this.review = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), this.state.errors.map(error => React.createElement(\"div\", {\n      className: \"error\",\n      key: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Error: \", error)), React.createElement(\"div\", {\n      className: \"buttons-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button regular\",\n      type: \"cancel\",\n      onClick: this.props.close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"CANCEL\"), React.createElement(\"button\", {\n      className: \"button solid\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"SUBMIT\")));\n  }\n\n}\n\nexport default ReviewForm;","map":{"version":3,"sources":["/Users/danielaavilajaramillo/Desktop/Rodie Coding Challege/Roadie-Coding-Challenge/src/components/reviewForm/ReviewForm.js"],"names":["React","ReviewForm","Component","constructor","state","newReview","errors","handleSubmit","bind","validate","rating","title","name","review","push","length","event","preventDefault","value","today","Date","date","getMonth","slice","getDate","getFullYear","toString","substr","setState","newData","Title","User","Rating","Review","props","addReview","close","render","input","map","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './ReviewForm.css';\n\nclass ReviewForm extends React.Component {\n    constructor() {\n      super();\n\n      this.state = {\n        newReview: { },\n        errors: []\n      };\n  \n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.validate = this.validate.bind(this);\n    }\n\n    validate(rating, title, name, review) {\n      const errors = [];\n\n      if(rating === null || rating === \"0\") {\n        errors.push(\"Please select a rating\")\n      }\n      if(title.length === 0) {\n        errors.push(\"Review should have a title\")\n      }\n      if(name.length === 0) {\n        errors.push(\"Name can't be empty\")\n      }\n      if(review.length === 0) {\n        errors.push(\"Please write about your experience\")\n      }\n\n      return errors;\n    }\n  \n    handleSubmit(event){\n      event.preventDefault();\n\n      const title = this.title.value;\n      const name = this.name.value;\n      var today = new Date();\n      const date = ('0' + (today.getMonth()+1)).slice(-2) + '/' + ('0' + today.getDate()).slice(-2) + '/' + today.getFullYear().toString().substr(-2);    \n      const rating = this.rating.value;\n      const review = this.review.value;\n\n      const errors = this.validate(rating, title, name, review);\n\n      if (errors.length > 0) {\n        this.setState({ errors })\n        return;\n      }\n      \n      const newData = {\n        Title: title,\n        User: name,\n        Date: date,\n        Rating: rating,\n        Review: review\n      };\n\n      this.props.addReview(newData)\n      this.props.close()\n    }\n  \n    render() {\n      return (\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n            <label>Rating</label>\n            <select ref={value => this.rating = value}>\n                <option value=\"0\">Select</option>\n                <option value=\"1\">One star</option>\n                <option value=\"2\">Two star</option>\n                <option value=\"3\">Three star</option>\n                <option value=\"4\">Four star</option>\n                <option value=\"5\">Five star</option>\n            </select>\n\n            <label>Your name</label>\n            <input type=\"text\" placeholder=\"Enter text here...\" ref={input => this.name = input} />\n            \n            <label>Review title</label>\n            <input type=\"text\" placeholder=\"Enter text here...\" ref={input => this.title = input} />\n            \n            <label>Write your review below</label>\n            <textarea className=\"input-review\" placeholder=\"Enter text here...\" ref={input => this.review = input} />\n            \n            {this.state.errors.map(error => (\n              <div className=\"error\" key={error}>Error: {error}</div>\n            ))}\n\n            <div className=\"buttons-container\">\n                <button className=\"button regular\" type=\"cancel\" onClick={this.props.close}>CANCEL</button>\n                <button className=\"button solid\" type=\"submit\" >SUBMIT</button>\n            </div>\n        </form>\n      );\n    }\n  }\n\nexport default ReviewForm;"]},"metadata":{},"sourceType":"module"}