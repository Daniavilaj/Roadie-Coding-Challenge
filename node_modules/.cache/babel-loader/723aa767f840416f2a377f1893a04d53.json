{"ast":null,"code":"var _jsxFileName = \"/Users/danielaavilajaramillo/Desktop/Rodie Coding Challege/Roadie-Coding-Challenge/src/components/ratings/Ratings.js\";\nimport React from 'react';\nimport StarRating from '../components/starRating/StarRating';\n\nfunction RatingBars(props) {\n  var fillWidth = 0;\n  fillWidth = props.rating * 100 / props.numReviews + '%'; // console.log(props.index)\n  // console.log(props.rating)\n  // console.log(fillWidth)\n  // console.log(props.star)\n\n  return React.createElement(\"div\", {\n    className: \"rating\",\n    key: props.star,\n    value: props.rating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"rating-button\",\n    type: \"button\",\n    key: props.star,\n    value: props.star,\n    onClick: e => props.filterReviews(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, props.star, \" star\"), React.createElement(\"div\", {\n    className: \"rating-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"rating-bar-fill\",\n    style: {\n      \"width\": fillWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })));\n}\n\nexport default function Ratings({\n  state,\n  filterReviews\n}) {\n  const stars = [5, 4, 3, 2, 1];\n  var ratingCounts = [];\n  const numReviews = state.numReviews;\n  var averageRating = 0;\n\n  for (let i = 0; i < 5; i++) {\n    ratingCounts[i] = 0;\n  }\n\n  state.reviews.map((review, index) => {\n    const rating = parseInt(review.Rating); // console.log(review.Rating)\n\n    averageRating = averageRating + rating; // console.log(averageRating)\n\n    switch (rating) {\n      case 1:\n        ratingCounts[4] = ratingCounts[4] + 1;\n        break;\n\n      case 2:\n        ratingCounts[3] = ratingCounts[3] + 1;\n        break;\n\n      case 3:\n        ratingCounts[2] = ratingCounts[2] + 1;\n        break;\n\n      case 4:\n        ratingCounts[1] = ratingCounts[1] + 1;\n        break;\n\n      case 5:\n        ratingCounts[0] = ratingCounts[0] + 1;\n        break;\n\n      default:\n        return null;\n    }\n\n    return null;\n  }); // console.log(ratingCounts.length)\n\n  averageRating = Math.floor(averageRating / numReviews); // console.log(ratingCounts.findIndex(2))\n\n  return React.createElement(\"div\", {\n    className: \"ratings-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"average-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(StarRating, {\n    rating: averageRating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"average\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, averageRating, \" out of 5\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, numReviews, \" reviews\"), React.createElement(\"div\", {\n    className: \"rating-bars-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, stars.map((star, index) => React.createElement(RatingBars, {\n    key: star,\n    star: star,\n    rating: ratingCounts[index],\n    numReviews: numReviews,\n    filterReviews: filterReviews,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"rating-all-button\",\n    type: \"button\",\n    value: \"\",\n    onClick: e => filterReviews(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"All reviews\")));\n}","map":{"version":3,"sources":["/Users/danielaavilajaramillo/Desktop/Rodie Coding Challege/Roadie-Coding-Challenge/src/components/ratings/Ratings.js"],"names":["React","StarRating","RatingBars","props","fillWidth","rating","numReviews","star","e","filterReviews","target","value","Ratings","state","stars","ratingCounts","averageRating","i","reviews","map","review","index","parseInt","Rating","Math","floor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport StarRating from '../components/starRating/StarRating';\n\nfunction RatingBars(props) {\n    var fillWidth = 0\n    fillWidth = ((props.rating * 100) / props.numReviews) + '%'\n    // console.log(props.index)\n    // console.log(props.rating)\n    // console.log(fillWidth)\n    // console.log(props.star)\n    return(\n      <div className=\"rating\" key={props.star} value={props.rating}>\n        <button className=\"rating-button\" type=\"button\" key={props.star} value={props.star} onClick={e => props.filterReviews(e.target.value)}>{props.star} star</button>\n        <div className=\"rating-bar\">\n          <div className=\"rating-bar-fill\" style={ { \"width\": fillWidth} }></div>\n        </div>\n      </div>\n    )\n}\n\nexport default function Ratings({ state, filterReviews } ) {\n    const stars = [5,4,3,2,1]\n    var ratingCounts = []\n    const numReviews = state.numReviews \n    var averageRating = 0\n    \n    for (let i=0; i<5; i++) {\n        ratingCounts[i] = 0\n    }\n    \n    state.reviews.map((review, index) => {\n        const rating = parseInt(review.Rating);\n        // console.log(review.Rating)\n        averageRating = averageRating + rating\n        // console.log(averageRating)\n        switch(rating) {\n        case 1:\n            ratingCounts[4] = ratingCounts[4] + 1\n            break;\n        case 2:\n            ratingCounts[3] = ratingCounts[3] + 1\n            break;\n        case 3:\n            ratingCounts[2] = ratingCounts[2] + 1\n            break;\n        case 4:\n            ratingCounts[1] = ratingCounts[1] + 1\n            break;\n        case 5:\n            ratingCounts[0] = ratingCounts[0] + 1\n            break;\n        default: \n            return null\n        }\n        return null\n    })\n        // console.log(ratingCounts.length)\n    \n    averageRating = Math.floor(averageRating / numReviews)\n    // console.log(ratingCounts.findIndex(2))\n    \n    return(\n        <div className=\"ratings-container\">\n        <div className=\"average-container\">\n            <StarRating rating={averageRating}/>\n            <div className=\"average\">{averageRating} out of 5</div>\n        </div>\n        <div>{numReviews} reviews</div>\n        <div className=\"rating-bars-container\">\n            {stars.map((star, index) => (\n            <RatingBars key={star} star={star} rating={ratingCounts[index]} numReviews={numReviews} filterReviews={filterReviews}></RatingBars>\n            ))}\n            <button className=\"rating-all-button\" type=\"button\" value=\"\" onClick={e => filterReviews(e.target.value)}>All reviews</button>    \n        </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}